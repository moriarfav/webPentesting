var url = 'mongodb://localhost:27017/test';
// modulo que contiene las consultas a la base de datos
var modelFilm = require ('.././models/film');

//Variables para almacenar los comentarios
var comentarios = [{ autor: '', contenido: '' }];
var comentarios1 = [{ autor: '', contenido: '' }];
var comentarios2 = [{ autor: '', contenido: '' }];
var comentarios3 = [{ autor: '', contenido: '' }];

module.exports = {
    insertFilms: function () { // funcion que inserta las peliculas de ejemplo basicas de la web
        modelFilm.getFilms('Origen',function(err,docs){
                if (docs.length==0){
                    modelFilm.insertFirst();
               }
        });          
    },// obtiene las peliculas existentes en la BD a excepción de la que esta oculta y renderiza la vista
    getSearch: function (req, res, next) {
       modelFilm.getAll(function(err,docs){
                //console.log(docs);
                res.render('movies/moviesHome', { movies: docs });
       }); 
    },

    postSearch: function (req, res, next) {
        modelFilm.mongoQuery(req.body.titulo,function(err,docs){
                res.render('movies/moviesHome', { movies: docs });

        });
    },
    
    getDetails: function (req, res, next) {
            modelFilm.getFilm(req.params.movie,function(err,movie){
                res.render('movies/movieDetail', { movie: movie, comentarios:comentarios });
            });
    },
    //si los campos autor y contenido no estan vacios, añade el comentario
    postDetails: function (req, res, next) {
        modelFilm.getFilm(req.params.movie,function(err,movie){
                if (req.body.autor && req.body.contenido){
                  var autor = req.body.autor;
                  var contenido = req.body.contenido;
                  
                  comentarios.push({ autor: autor, contenido: contenido });
                }
                res.render('movies/movieDetail', { movie: movie, comentarios: comentarios });
            });
    },
    getDetails1: function (req, res, next) {
        modelFilm.getFilm('Origen',function(err,movie){
                res.render('movies/movieDetail1', { movie: movie, comentarios:comentarios1 });
            });
    },
    postDetails1: function (req, res, next) {
        modelFilm.getFilm('Origen',function(err,movie){
                if (req.body.autor && req.body.contenido){
                  /* replace: remplaza el primer parametro por el segundo,
                  en este caso sustituye la primera ocurrencia de <script> que encuentre */
                  var autor = req.body.autor.replace("<script>","");
                  var contenido = req.body.contenido.replace("<script>",""); 
                  comentarios1.push({ autor: autor, contenido: contenido });
                }
                res.render('movies/movieDetail1', { movie: movie, comentarios: comentarios1 });
            });
    },
    getDetails2: function (req, res, next) {
        modelFilm.getFilm('Origen',function(err,movie){
                res.render('movies/movieDetail2', { movie: movie, comentarios:comentarios2 });
            });
    },
    postDetails2: function (req, res, next) {
       modelFilm.getFilm('Origen',function(err,movie){
                if (req.body.autor && req.body.contenido){

                  //ahora sustituye todas las ocurrencias sin ser sensible a mayusculas (gi)
                  var autor = req.body.autor.replace(/<script>/gi,"");
                  var contenido = req.body.contenido.replace(/<script>/gi,"");
                  
                  comentarios2.push({ autor: autor, contenido: contenido });
                }
                res.render('movies/movieDetail2', { movie: movie, comentarios: comentarios2 });
            });
    },
    getDetails3: function (req, res, next) {
       modelFilm.getFilm('Origen',function(err,movie){
                res.render('movies/movieDetail3', { movie: movie, comentarios:comentarios3 });
            });
    },
    postDetails3: function (req, res, next) {
        modelFilm.getFilm('Origen',function(err,movie){
                if (req.body.autor && req.body.contenido){

                  // filtro de (") y de (<)
                var autor = req.body.autor.replace(/</g, '&lt;');
                var contenido = req.body.contenido.replace(/</g, '&lt;');
                 
                // [[alt(sin espacios)|src]]
                autor = autor.replace(/\[\[(\D+)\|(.+?)\]\]/g, '<img alt="$1" src="$2.jpg">');
                contenido = contenido.replace(/\[\[(\D+)\|(.+?)\]\]/g, '<img alt="$1" src="$2.jpg">');
                
                  comentarios3.push({ autor: autor, contenido: contenido });
                }
                res.render('movies/movieDetail3', { movie: movie, comentarios: comentarios3 });
            });
    }


};