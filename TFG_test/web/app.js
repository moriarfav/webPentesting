
// cargar modulos
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
var routes = require('./routes/routes');
var flash = require('connect-flash');
var session = require('express-session');
var passport = require('passport');
require('./passport/passport')(passport);
var bcrypt = require('bcryptjs'); // para la encriptacion
var db = require('./config/mysqlConfig'); //conexion Base de datos

var app = express();

app.use(cookieParser());
app.use(session({
  secret: 'secretpass', // clave sesiones
  resave: false,
  saveUninitialized: false
}));
app.use(flash()); // para mensajes flash

// para indicar la ruta de vistas y el motor de plantillas que se utiliza
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');


app.use(logger('dev'));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
//app.use('/static', express.static(__dirname + '/public'));

// directorio para recursos estáticos, como las imagenes, estilos, etc..
app.use(express.static(path.join(__dirname, 'public')));

// inicializar passport (para las sesiones)
app.use(passport.initialize());
app.use(passport.session());



// rutas
app.use('/', routes);

// insertar peliculas en la base de datos de mongo 
var controllers = require('./controllers').FilmControllerMongo.insertFilms();

// crear tabla de usuarios
db.query('create table if not exists users ('+
                       'usuario varchar(255) primary key ,'+
                       'password varchar(255)'+
                    ')', function (error,resultado){
                          if (error)
                              console.log(error);
                        }

);

// encriptacion de las contraseñas de los usuarios
var salt=bcrypt.genSaltSync(8) ;
var password = bcrypt.hashSync('secret02', salt);
var password2 = bcrypt.hashSync('somethink08', salt);
var user1 = {                
                    usuario: 'user1',
                    //encriptada
                    password: password
            };
var user2 = {                
                    usuario: 'admin',
                    //encriptada
                    password: password2
            };            

// inserción de dos usuarios en la base de datos mysql
var modelUser = require('./models/user');
var user1 = modelUser.insertFirst(user1);
var user2 = modelUser.insertFirst(user2);

// catch 404 and forward to error handler
app.use(function(req, res, next) {
  var err = new Error('Not Found');
  err.status = 404;
  next(err);
});

// error handlers

// development error handler
// will print stacktrace
if (app.get('env') === 'development') {
  app.use(function(err, req, res, next) {
    res.status(err.status || 500);
    res.render('error', {
      message: err.message,
      error: err
    });
  });
}

// production error handler
// no stacktraces leaked to user
app.use(function(err, req, res, next) {
  res.status(err.status || 500);
  res.render('error', {
    message: err.message,
    error: {}
  });
});


module.exports = app;
