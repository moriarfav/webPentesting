

var LocalStrategy = require('passport-local').Strategy;
// conexion a la base de datos
var db = require('.././config/mysqlConfig');

module.exports = function(passport){
    passport.serializeUser(function(user, done){ // serializar
        done(null, user);

    });
    passport.deserializeUser(function(obj, done){ // desserialiar
        done(null, obj);

    });

    passport.use(new LocalStrategy({ // estrategia de autenticacion
      passReqToCallback: true
    }, function(req, usuario, password, done){
          

          // vulnerable al concatenar directamente la entrada del usuario sin ningun tipo de filtrado, por ejemplo:
          // '=', o usuario'#(comentar el resto de la consulta) serian cadenas que conseguirian saltarse el sistema de autenticaciÃ³n
          db.query("SELECT * FROM users WHERE usuario = '"+ usuario +"' AND password = '"+ password +"' ",function(err, rows, fields){
          //console.log("SELECT * FROM users WHERE usuario = '"+ usuario +"' AND password = '"+ password +"' ");   
          // seguro al tratar los campos como parametros y no concatenandolos con la propia consulta
          //db.query('SELECT * FROM users WHERE usuario = ? AND password = ?', [usuario, password], function(err, rows, fields){
            if(err){
                console.log(err);
                return done(null, false, req.flash('authmessage', 'consultar error en la consola'));
            }
            if(rows.length > 0){ // si la consulta dio algun resultado
                var user = rows[0];
                    return done(null, {
                        usuario: user.usuario

                    }); // solo es necesario el nombre del usuario, por tanto se envia sin el password
                //}

            }
            return done(null, false, req.flash('authmessage', 'Nombre de usuario o Password incorrectos'));
          });
        }
    ));
};
